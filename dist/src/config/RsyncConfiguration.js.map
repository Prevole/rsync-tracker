{"version":3,"file":"RsyncConfiguration.js","sourceRoot":"","sources":["../../../src/config/RsyncConfiguration.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,2DAAmC;AAGnC;IAqBE,YACE,GAAW,EACX,IAAY,EACZ,MAA8B;QAnBf,cAAS,GAAa,EAAE,CAAC;QAGzB,UAAK,GAAc,SAAS,CAAC,IAAI,CAAC;QAElC,gBAAW,GAAY,KAAK,CAAC;QAgB5C,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,IAAI,MAAM,EAAE;YACV,IAAI,MAAM,CAAC,IAAI,EAAE;gBACf,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAA4B,CAAC,CAAC;aAC7E;YAED,IAAI,MAAM,CAAC,IAAI,EAAE;gBACf,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC;aAC1B;YAED,IAAI,MAAM,CAAC,QAAQ,EAAE;gBACnB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;aAClC;YAED,IAAI,MAAM,CAAC,SAAS,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;aAC7C;YAED,IAAI,MAAM,CAAC,UAAU,KAAK,SAAS,EAAE;gBACnC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;aACtC;SACF;IACH,CAAC;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,OAAO;QACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM;QACJ,MAAM,IAAI,GAAQ;YAChB,GAAG,EAAE,IAAI,CAAC,IAAI;YACd,IAAI,EAAE,IAAI,CAAC,KAAK;YAChB,IAAI,EAAE,IAAI,CAAC,KAAK;YAChB,GAAG,EAAE,IAAI,CAAC,IAAI;YACd,IAAI,EAAE,IAAI,CAAC,KAAK;YAChB,UAAU,EAAE,IAAI,CAAC,WAAW;YAC5B,QAAQ,EAAE,IAAI,CAAC,SAAS;SACzB,CAAC;QAEF,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;SAClC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AA9FC;IADC,gBAAM,CAAC,UAAU,CAAC;gDACG;AAGtB;IADC,gBAAM,EAAE;gDACS;AAGlB;IADC,gBAAM,EAAE;qDACqB;AAnBhC,qCA2GC;AAED,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,8BAAiB,CAAA;IACjB,0BAAa,CAAA;AACf,CAAC,EAHW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAGpB","sourcesContent":["import Inject from '../ioc/Inject';\nimport FileUtils from '../utils/FileUtils';\n\nexport default class RsyncConfiguration {\n  private _src: string;\n  private _dest: string;\n\n  private readonly _args?: string;\n  private readonly _excludes: string[] = [];\n  private readonly _hardlinks?: string;\n\n  private readonly _mode: RsyncMode = RsyncMode.SYNC;\n\n  private readonly _createDest: boolean = false;\n\n  @Inject('rsyncBin')\n  private _bin!: string;\n\n  @Inject()\n  private path: any;\n\n  @Inject()\n  private fileUtils!: FileUtils;\n\n  constructor(\n    src: string,\n    dest: string,\n    config?: RawRsyncConfiguration\n  ) {\n    this._src = src;\n    this._dest = dest;\n\n    if (config) {\n      if (config.mode) {\n        this._mode = RsyncMode[config.mode.toUpperCase() as keyof typeof RsyncMode];\n      }\n\n      if (config.args) {\n        this._args = config.args;\n      }\n\n      if (config.excludes) {\n        this._excludes = config.excludes;\n      }\n\n      if (config.hardlinks) {\n        this._hardlinks = config.hardlinks.basePath;\n      }\n\n      if (config.createDest !== undefined) {\n        this._createDest = config.createDest;\n      }\n    }\n  }\n\n  get bin(): string {\n    return this._bin;\n  }\n\n  get src(): string {\n    return this._src;\n  }\n\n  get dest(): string {\n    return this._dest;\n  }\n\n  get hardLinks(): string | undefined {\n    return this._hardlinks;\n  }\n\n  get args(): string | undefined {\n    return this._args;\n  }\n\n  get excludes(): string[] | undefined {\n    return this._excludes;\n  }\n\n  get mode(): RsyncMode {\n    return this._mode;\n  }\n\n  get isCreateDest(): boolean {\n    return this._createDest;\n  }\n\n  resolve(): RsyncConfiguration {\n    this._src = this.fileUtils.resolve(this._src);\n    this._dest = this.fileUtils.resolve(this._dest);\n    return this;\n  }\n\n  toJson(): any {\n    const json: any = {\n      src: this._src,\n      dest: this._dest,\n      mode: this._mode,\n      bin: this._bin,\n      args: this._args,\n      createDest: this._createDest,\n      excludes: this._excludes\n    };\n\n    if (this._hardlinks) {\n      json.hardlinks = this._hardlinks;\n    }\n\n    return json;\n  }\n}\n\nexport enum RsyncMode {\n  BACKUP = 'backup',\n  SYNC = 'sync'\n}\n\nexport type RawRsyncConfiguration = {\n  mode?: string,\n  args?: string,\n  excludes?: string[],\n  hardlinks?: {\n    basePath: string\n  },\n  createDest?: boolean\n};\n"]}